plugins {
	id 'java'
	id 'org.springframework.boot' version '2.1.5.RELEASE'

	id 'net.ltgt.apt' version '0.9'
}

apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"

group = 'com.prodyna.mbb'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

sourceCompatibility = JavaVersion.VERSION_1_8

ext {
	mapstructVersion = "1.3.0.Final"
	lombokVersion = "1.18.0"
}



dependencies {

	// mapstruct
	compile ("org.mapstruct:mapstruct:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}")
	apt ("org.mapstruct:mapstruct-processor:${mapstructVersion}", "org.projectlombok:lombok:${lombokVersion}")

	// actuator
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// spring data
	implementation 'org.springframework.boot:spring-boot-starter-data-neo4j'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'

	// spring security
	implementation 'org.springframework.boot:spring-boot-starter-security'


	// devtools
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'

	// swagger
	implementation "io.springfox:springfox-swagger2:2.9.2"
	implementation "io.springfox:springfox-swagger-ui:2.9.2"


	// testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.12.2'
	testImplementation 'io.rest-assured:rest-assured:4.0.0'
	testImplementation 'pl.pragmatists:JUnitParams:1.1.1'



}

// create test reports in xml and html
jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
	}
}


// define explizit wrapper for azure
wrapper {
	gradleVersion = '4.4'
}